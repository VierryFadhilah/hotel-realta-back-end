-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS hotel.facilities
(
    faci_id integer NOT NULL DEFAULT nextval('hotel.facilities_faci_id_seq'::regclass),
    faci_name character varying(125) COLLATE pg_catalog."default",
    faci_description character varying(255) COLLATE pg_catalog."default",
    faci_max_number integer,
    faci_measure_unit character varying(15) COLLATE pg_catalog."default",
    faci_room_number character varying(6) COLLATE pg_catalog."default",
    faci_startdate timestamp without time zone,
    faci_enddate timestamp without time zone,
    faci_low_price money,
    faci_high_price money,
    faci_rate_price money,
    faci_discount money,
    faci_tax_rate money,
    faci_cagro_id integer,
    faci_hotel_id integer,
    faci_modified_date timestamp without time zone DEFAULT now(),
    CONSTRAINT facilities_pkey PRIMARY KEY (faci_id),
    CONSTRAINT facilities_faci_room_number_key UNIQUE (faci_room_number)
);

CREATE TABLE IF NOT EXISTS hotel.facility_photos
(
    fapho_id integer NOT NULL DEFAULT nextval('hotel.facility_photos_fapho_id_seq'::regclass),
    fapho_faci_id integer,
    fapho_thumbnail_filename character varying(50) COLLATE pg_catalog."default",
    fapho_photo_filename character varying(50) COLLATE pg_catalog."default",
    fapho_primary boolean,
    fapho_modified_date timestamp without time zone DEFAULT now(),
    CONSTRAINT facility_photos_pkey PRIMARY KEY (fapho_id)
);

CREATE TABLE IF NOT EXISTS hotel.facility_price_history
(
    faph_id integer NOT NULL DEFAULT nextval('hotel.facility_price_history_faph_id_seq'::regclass),
    faph_startdate timestamp without time zone,
    faph_enddate timestamp without time zone,
    faph_low_price money,
    faph_high_price money,
    faph_rate_price money,
    faph_discount money,
    faph_tax_rate money,
    faph_modified_date timestamp without time zone DEFAULT now(),
    faph_user_id integer,
    faph_faci_id integer,
    CONSTRAINT facility_price_history_pkey PRIMARY KEY (faph_id)
);

CREATE TABLE IF NOT EXISTS hotel.hotel_reviews
(
    hore_id integer NOT NULL DEFAULT nextval('hotel.hotel_reviews_hore_id_seq'::regclass),
    hore_user_review character varying(125) COLLATE pg_catalog."default",
    hore_rating smallint,
    hore_created_on timestamp without time zone DEFAULT now(),
    hore_user_id integer,
    hore_hotel_id integer,
    CONSTRAINT hotel_reviews_pkey PRIMARY KEY (hore_id)
);

CREATE TABLE IF NOT EXISTS hotel.hotels
(
    hotel_id integer NOT NULL DEFAULT nextval('hotel.hotels_hotel_id_seq'::regclass),
    hotel_name character varying(85) COLLATE pg_catalog."default",
    hotel_description character varying(500) COLLATE pg_catalog."default",
    hotel_rating_star numeric,
    hotel_phonenumber character varying(25) COLLATE pg_catalog."default",
    status character varying(10) COLLATE pg_catalog."default" NOT NULL,
    reason character varying(100) COLLATE pg_catalog."default",
    hotel_addr_id integer,
    hotel_modified_date timestamp without time zone DEFAULT now(),
    CONSTRAINT hotels_pkey PRIMARY KEY (hotel_id)
);

CREATE TABLE IF NOT EXISTS master.address
(
    addr_id integer NOT NULL DEFAULT nextval('master.address_addr_id_seq'::regclass),
    addr_line1 character varying(225) COLLATE pg_catalog."default",
    addr_line2 character varying(225) COLLATE pg_catalog."default",
    addr_postal_code character varying(5) COLLATE pg_catalog."default",
    addr_spatial_location geography,
    addr_prov_id integer,
    CONSTRAINT address_pkey PRIMARY KEY (addr_id)
);

CREATE TABLE IF NOT EXISTS master.category_group
(
    cagro_id integer NOT NULL DEFAULT nextval('master.category_group_cagro_id_seq'::regclass),
    cagro_name character varying(25) COLLATE pg_catalog."default",
    cagro_description character varying(255) COLLATE pg_catalog."default",
    cagro_type character varying(25) COLLATE pg_catalog."default",
    cagro_icon character varying(255) COLLATE pg_catalog."default",
    cagro_icon_url character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT category_group_pkey PRIMARY KEY (cagro_id),
    CONSTRAINT category_group_cagro_name_key UNIQUE (cagro_name)
);

CREATE TABLE IF NOT EXISTS master.country
(
    country_id integer NOT NULL DEFAULT nextval('master.country_country_id_seq'::regclass),
    country_name character varying(55) COLLATE pg_catalog."default",
    country_region_id integer,
    CONSTRAINT country_pkey PRIMARY KEY (country_id),
    CONSTRAINT country_country_name_key UNIQUE (country_name)
);

CREATE TABLE IF NOT EXISTS master.policy
(
    poli_id integer NOT NULL DEFAULT nextval('master.policy_poli_id_seq'::regclass),
    poli_name character varying(55) COLLATE pg_catalog."default",
    poli_description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT policy_pkey PRIMARY KEY (poli_id)
);

CREATE TABLE IF NOT EXISTS master.policy_category_group
(
    poca_poli_id integer NOT NULL,
    poca_cagro_id integer NOT NULL,
    CONSTRAINT policy_category_group_pkey PRIMARY KEY (poca_poli_id, poca_cagro_id)
);

CREATE TABLE IF NOT EXISTS master.provinces
(
    prov_id integer NOT NULL DEFAULT nextval('master.provinces_prov_id_seq'::regclass),
    prov_name character varying(85) COLLATE pg_catalog."default",
    prov_country_id integer,
    CONSTRAINT provinces_pkey PRIMARY KEY (prov_id)
);

CREATE TABLE IF NOT EXISTS master.regions
(
    region_code integer NOT NULL DEFAULT nextval('master.regions_region_code_seq'::regclass),
    region_name character varying(35) COLLATE pg_catalog."default",
    CONSTRAINT regions_pkey PRIMARY KEY (region_code),
    CONSTRAINT regions_region_name_key UNIQUE (region_name)
);

CREATE TABLE IF NOT EXISTS public.tes
(
)
;

CREATE TABLE IF NOT EXISTS users.users
(
    user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_full_name character varying COLLATE pg_catalog."default" DEFAULT ('guest'::text || nextval('sequence_for_user_full_name'::regclass)),
    user_type character varying(15) COLLATE pg_catalog."default" NOT NULL,
    user_company_name character varying(225) COLLATE pg_catalog."default",
    user_email character varying(256) COLLATE pg_catalog."default",
    user_phone_number character varying(25) COLLATE pg_catalog."default",
    user_modified_date timestamp without time zone,
    user_photo_profile character varying(225) COLLATE pg_catalog."default",
    user_hotel_id integer,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_user_phone_number_key UNIQUE (user_phone_number)
);

ALTER TABLE IF EXISTS hotel.facilities
    ADD CONSTRAINT facilities_faci_cagro_id_fkey FOREIGN KEY (faci_cagro_id)
    REFERENCES master.category_group (cagro_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel.facilities
    ADD CONSTRAINT facilities_facihotelid_fkey FOREIGN KEY (faci_hotel_id)
    REFERENCES hotel.hotels (hotel_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel.facility_photos
    ADD CONSTRAINT facility_photos_fapho_faci_id_fkey FOREIGN KEY (fapho_faci_id)
    REFERENCES hotel.facilities (faci_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel.facility_price_history
    ADD CONSTRAINT facility_price_history_faph_faci_id_fkey FOREIGN KEY (faph_faci_id)
    REFERENCES hotel.facilities (faci_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel.facility_price_history
    ADD CONSTRAINT facility_price_history_fapri_user_id_fkey FOREIGN KEY (faph_user_id)
    REFERENCES users.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel.hotel_reviews
    ADD CONSTRAINT hotel_reviews_hore_user_id_fkey FOREIGN KEY (hore_user_id)
    REFERENCES users.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel.hotel_reviews
    ADD CONSTRAINT hotel_reviews_horehotelid_fkey FOREIGN KEY (hore_hotel_id)
    REFERENCES hotel.hotels (hotel_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel.hotels
    ADD CONSTRAINT fk_hotel_addr_id FOREIGN KEY (hotel_addr_id)
    REFERENCES master.address (addr_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS master.address
    ADD CONSTRAINT address_addr_prov_id_fkey FOREIGN KEY (addr_prov_id)
    REFERENCES master.provinces (prov_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS master.country
    ADD CONSTRAINT country_country_region_id_fkey FOREIGN KEY (country_region_id)
    REFERENCES master.regions (region_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS master.policy_category_group
    ADD CONSTRAINT policy_category_group_poca_cagro_id_fkey FOREIGN KEY (poca_cagro_id)
    REFERENCES master.category_group (cagro_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS master.policy_category_group
    ADD CONSTRAINT policy_category_group_poca_poli_id_fkey FOREIGN KEY (poca_poli_id)
    REFERENCES master.policy (poli_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS master.provinces
    ADD CONSTRAINT provinces_prov_country_id_fkey FOREIGN KEY (prov_country_id)
    REFERENCES master.country (country_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;